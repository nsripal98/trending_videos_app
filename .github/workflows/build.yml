name: Build APK with Buildozer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip \
          build-essential \
          git \
          python3-dev \
          ffmpeg \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev \
          zlib1g-dev \
          libgstreamer1.0 \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          libgstreamer1.0-dev \
          libtool \
          libtool-bin \
          autoconf \
          automake \
          pkg-config \
          gettext \
          m4

    - name: Install buildozer
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install --upgrade Cython==0.29.33 virtualenv
        pip install --upgrade buildozer

    - name: Set up build environment
      run: |
        mkdir -p $GITHUB_WORKSPACE/.buildozer
        mkdir -p $GITHUB_WORKSPACE/.buildozer/android/platform
        git clone --depth=1 https://github.com/kivy/python-for-android.git $GITHUB_WORKSPACE/.buildozer/android/platform/python-for-android
        cd $GITHUB_WORKSPACE/.buildozer/android/platform/python-for-android
        
        # Create source files and build configuration
        echo 'int main() { return 0; }' > p4a.c
        
        # Create m4 directory for macros
        mkdir -p m4
        
        # Create configure.ac with proper libtool initialization
        cat > configure.ac << 'EOL'
AC_PREREQ([2.69])
AC_INIT([python-for-android], [1.0], [kivy-dev@googlegroups.com])
AC_CONFIG_MACRO_DIRS([m4])
AM_INIT_AUTOMAKE([foreign -Wall -Werror])
LT_PREREQ([2.4])
LT_INIT
AC_PROG_CC
AC_CONFIG_FILES([Makefile])
AC_OUTPUT
EOL
        
        # Create Makefile.am
        cat > Makefile.am << 'EOL'
ACLOCAL_AMFLAGS = -I m4
bin_PROGRAMS = p4a
p4a_SOURCES = p4a.c
EOL
        
        # Initialize build system
        libtoolize --force --copy
        aclocal -I m4
        autoheader
        automake --add-missing --copy
        autoconf
        
        # Configure and build
        ./configure
        make
        python setup.py install
        cd $GITHUB_WORKSPACE
        chmod -R 755 $GITHUB_WORKSPACE/.buildozer

    - name: Accept Android licenses
      run: |
        yes | sudo ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Build APK
      run: |
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: trendingvideos-debug
        path: bin/*.apk
        compression-level: 0